{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/AddTodoPanel/index.js","components/AddTodoPanel/AddTodoPanel.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","preventDefault","target","value","props","setState","type","onChange","this","placeholder","React","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","classNames","key","onClick","TodoListItem","onDelete","important","onToggleImportant","onToggleDone","TodoList","todos","elements","item","id","itemProps","AddTodoPanel","onLabelChange","onSubmit","addNewTodo","aria-label","aria-describedby","App","maxId","createTodoItem","deleteItem","idx","findIndex","el","slice","text","newTodo","toggleProperty","arr","propName","oldItem","newItem","items","length","toLowerCase","indexOf","doneCount","todosCount","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb1ac89d.chunk.js","sourcesContent":["import AppHeader from './AppHeader'\n\nexport default AppHeader","import React from 'react';\n\nimport './AppHeader.css'\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    )\n}\n\nexport default AppHeader","import SearchPanel from './SearchPanel'\n\nexport default SearchPanel","import React from 'react'\nimport './SearchPanel.css'\n\nexport default class SearchPanel extends React.Component {\n    state = {term: ''}\n    onSearchChange = (e) => {\n        e.preventDefault()\n        const term = e.target.value\n        this.props.onSearchChange(term)\n        this.setState({term})\n    }\n\n    render() {\n        return (\n            <input type=\"text\"\n                   onChange={this.onSearchChange}\n                   className=\"form-control search-input\"\n                   placeholder=\"Type to search\"\n                   value={this.state.term}/>)\n    }\n}","import ItemStatusFilter from './ItemStatusFilter'\n\nexport default ItemStatusFilter","import React from 'react';\n\nimport './ItemStatusFilter.css';\n\nexport default class ItemStatusFilter extends React.Component {\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ]\n\n    render() {\n        const {filter, onFilterChange} = this.props\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = name === filter\n            const classNames = isActive ? 'btn-info' : 'btn-outline-secondary'\n\n            return (\n                <button type=\"button\"\n                        className={`btn ${classNames}`}\n                        key={name}\n                        onClick={() => onFilterChange(name)}>\n                    {label}\n                </button>)\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>)\n    }\n}","import React from 'react'\n\nimport './TodoListItem.css'\n\nexport default class TodoListItem extends React.Component {\n\n    render() {\n\n        const {label, onDelete, done, important, onToggleImportant, onToggleDone} = this.props\n\n        let classNames = 'todo-list-item'\n\n        if (done) {\n            classNames += ' done'\n        }\n        if (important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames}>\n              <span\n                  className=\"todo-list-item-label\"\n                  onClick={onToggleDone}>\n                {label}\n              </span>\n\n              <button type=\"button\"\n                      className=\"btn btn-outline-success btn-sm float-right\"\n                      onClick={onToggleImportant}>\n                <i className=\"fa fa-exclamation\"/>\n              </button>\n\n              <button type=\"button\"\n                      className=\"btn btn-outline-danger btn-sm float-right\"\n                      onClick={onDelete}>\n                <i className=\"fa fa-trash-o\"/>\n              </button>\n            </span>\n        )\n    }\n}","import TodoList from './TodoList'\n\nexport default TodoList","import React from 'react'\n\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nimport './TodoList.css'\n\nconst TodoList = ({\n                      todos,\n                      onDelete,\n                      onToggleImportant,\n                      onToggleDone\n                  }) => {\n\n     const elements = todos.map((item) => {\n        const {id, ...itemProps} = item;\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem {...itemProps}\n                              onDelete={() => onDelete(id)}\n                              onToggleImportant={() => onToggleImportant(id)}\n                              onToggleDone={() => onToggleDone(id)}/>\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import AddTodoPanel from './AddTodoPanel'\n\nexport default AddTodoPanel","import React from 'react'\n\nimport './AddTodoPanel.css'\n\nexport default class AddTodoPanel extends React.Component {\n\n    state = {\n        label: ''\n    }\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.addNewTodo(this.state.label)\n        this.setState({\n            label: ''\n        })\n    }\n\n\n    render() {\n\n        return (\n            <form className='add-todo-panel input-group' onSubmit={this.onSubmit}>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Type new todo\"\n                       aria-label=\"Add new todo\" aria-describedby=\"basic-addon2\" onChange={this.onLabelChange} value={this.state.label}/>\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-success\"><i className=\"fa fa-plus\"/> Add</button>\n                </div>\n            </form>\n        )\n    }\n}","import App from './App'\n\nexport default App","import React from 'react'\n\nimport AppHeader from '../AppHeader'\nimport SearchPanel from '../SearchPanel'\nimport ItemStatusFilter from '../ItemStatusFilter'\nimport TodoList from '../TodoList'\nimport AddTodoPanel from '../AddTodoPanel';\n\nimport './App.css'\n\nexport default class App extends React.Component {\n    maxId = 1;\n\n    state =\n        {\n            todos: [\n                this.createTodoItem('Learn React'),\n                this.createTodoItem('Learn Redux'),\n                this.createTodoItem('Learn Webpack')\n            ],\n            term: '',\n            filter: 'active'\n        }\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id)\n        const oldItem = arr[idx]\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName]\n        }\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ]\n    }\n\n    createTodoItem(label) {\n        return {\n            id: this.maxId++,\n            label,\n            done: false,\n            important: false\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todos}) => {\n            const idx = todos.findIndex((el) => el.id === id)\n\n            const newArray = [\n                ...todos.slice(0, idx), ...todos.slice(idx + 1)\n            ]\n\n            return {\n                todos: newArray\n            }\n        })\n    }\n\n    addNewTodo = (text) => {\n        const newTodo = this.createTodoItem(text)\n\n        this.setState(({todos}) => {\n            const newArray = [\n                ...todos, newTodo\n            ]\n\n            return ({\n                todos: newArray\n            })\n        })\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({todos}) => {\n            return {\n                todos: this.toggleProperty(todos, id, 'important')\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todos}) => {\n            return {\n                todos: this.toggleProperty(todos, id, 'done')\n            }\n        })\n    }\n\n    onSearchChange = (value) => {\n        this.setState({\n            term: value\n        })\n    }\n\n    onFilterChange = (value) => {\n        this.setState({\n            filter: value\n        })\n    }\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n        return items.filter((item) => {\n            return item.label.toLowerCase()\n                .indexOf(term.toLowerCase()) > -1\n        })\n    }\n\n    filter(items, filter) {\n        switch (filter) {\n            case 'all': {\n                return items\n            }\n            case 'active': {\n                return items.filter((item) => !item.done)\n            }\n            case 'done': {\n                return items.filter((item) => item.done)\n            }\n            default:\n                return items\n        }\n    }\n\n\n\n    render() {\n        const {todos, term, filter} = this.state\n        const doneCount = todos.filter((el) => el.done).length\n        const todosCount = todos.length - doneCount\n        const visibleItems = this.filter(this.search(todos, term), filter)\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todosCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\n                </div>\n\n                <TodoList todos={visibleItems}\n                          onDelete={this.deleteItem}\n                          onToggleImportant={this.onToggleImportant}\n                          onToggleDone={this.onToggleDone}/>\n                <AddTodoPanel addNewTodo={this.addNewTodo}/>\n            </div>\n        )\n    }\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}